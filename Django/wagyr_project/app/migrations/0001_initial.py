# -*- coding: utf-8 -*-
# Generated by Django 1.9.4 on 2016-04-23 18:06
from __future__ import unicode_literals

from django.conf import settings
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0007_alter_validators_add_error_messages'),
    ]

    operations = [
        migrations.CreateModel(
            name='Game',
            fields=[
                ('event_id', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('date', models.DateTimeField(default=django.utils.timezone.now)),
                ('status', models.CharField(default='scheduled', max_length=255)),
            ],
            options={
                'ordering': ['date'],
                'managed': True,
                'db_table': 'game',
            },
        ),
        migrations.CreateModel(
            name='Player',
            fields=[
                ('player_id', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('fname', models.CharField(max_length=255)),
                ('lname', models.CharField(max_length=255)),
            ],
            options={
                'managed': True,
                'db_table': 'player',
            },
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('team_id', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('wins', models.IntegerField(blank=True, null=True)),
                ('losses', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'managed': True,
                'db_table': 'team',
            },
        ),
        migrations.CreateModel(
            name='Venue',
            fields=[
                ('venue_id', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('city', models.CharField(max_length=255, null=True)),
                ('capacity', models.IntegerField(null=True)),
                ('name', models.CharField(max_length=255, null=True)),
                ('zip', models.CharField(blank=True, max_length=255, null=True)),
                ('country', models.CharField(max_length=255, null=True)),
                ('state', models.CharField(blank=True, max_length=255, null=True)),
                ('address', models.CharField(max_length=255, null=True)),
            ],
            options={
                'managed': True,
                'db_table': 'venue',
            },
        ),
        migrations.CreateModel(
            name='Wagyr',
            fields=[
                ('wagyr_id', models.CharField(db_column='id', default=1, max_length=255, primary_key=True, serialize=False)),
                ('amount', models.DecimalField(decimal_places=2, default=0, max_digits=6)),
                ('self_team', models.CharField(blank=True, max_length=255, null=True)),
                ('opponent_team', models.CharField(blank=True, max_length=255, null=True)),
                ('status', models.IntegerField(choices=[(1, 'In Progress'), (2, 'Pending Self'), (3, 'Pending Opponent'), (4, 'Fulfilled')], default=1)),
                ('game_id', models.ForeignKey(default=0, on_delete=django.db.models.deletion.CASCADE, related_name='game_wagyr', to='app.Game')),
            ],
            options={
                'managed': True,
                'db_table': 'wagyr',
            },
        ),
        migrations.CreateModel(
            name='WagyrUser',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('stripe_id', models.CharField(blank=True, default='', max_length=255)),
            ],
            options={
                'managed': True,
                'db_table': 'wagyr_user',
            },
            bases=('auth.user',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.AddField(
            model_name='wagyr',
            name='opponent_id',
            field=models.ForeignKey(default=0, on_delete=django.db.models.deletion.CASCADE, related_name='opponent_id_wagyr', to='app.WagyrUser', to_field='username'),
        ),
        migrations.AddField(
            model_name='wagyr',
            name='self_id',
            field=models.ForeignKey(default=0, on_delete=django.db.models.deletion.CASCADE, related_name='self_id_wagyr', to='app.WagyrUser', to_field='username'),
        ),
        migrations.AddField(
            model_name='wagyr',
            name='wagyr_winner',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.Wagyr'),
        ),
        migrations.AddField(
            model_name='team',
            name='venue',
            field=models.OneToOneField(blank=True, db_column='venue', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='team_venue', to='app.Venue'),
        ),
        migrations.AddField(
            model_name='player',
            name='team',
            field=models.ForeignKey(db_column='team', on_delete=django.db.models.deletion.CASCADE, related_name='players', to='app.Team'),
        ),
        migrations.AddField(
            model_name='game',
            name='away_team',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='away_team', to='app.Team'),
        ),
        migrations.AddField(
            model_name='game',
            name='home_team',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='home_team', to='app.Team'),
        ),
        migrations.AddField(
            model_name='game',
            name='venue',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='game_venue', to='app.Venue'),
        ),
    ]
